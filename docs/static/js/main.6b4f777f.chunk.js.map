{"version":3,"sources":["components/NavItem.js","components/Sidebar.js","context/MusicContext.js","pages/search/ContenedorSearch.js","pages/LikesPage.js","pages/ListasScreen.js","hooks/useSearch.js","hooks/useFetch.js","pages/homePage/Search.js","hooks/useForm.js","pages/homePage/Popular.js","hooks/useMusicId.js","pages/homePage/VideoPlayer.js","pages/PrincipalScreen.js","routes/AppRoute.js","AppMusic.jsx","index.js"],"names":["NavItem","navSize","title","icon","active","route","mt","flexDir","w","p","alignItems","placement","as","ReachLink","backgroundColor","borderRadius","_hover","textDecor","backgroundImage","to","fontSize","color","ml","display","Sidebar","useState","tamaÃ±oSide","setTamaÃ±oSide","pos","left","h","padding","marginTop","boxShadow","justifyContent","className","background","onClick","marginBottom","FiHome","FiList","FiTrendingUp","mb","borderColor","align","size","MusicContext","createContext","ContenedorSearch","image","artist","idSong","setMusic","useContext","maxW","borderWidth","overflow","d","bg","filter","console","log","src","flexDirection","px","colorScheme","variant","isTruncated","fontWeight","letterSpacing","textTransform","LikesPage","ListasScreen","useSearch","name","url","Error","isMounted","useRef","data","loading","error","state","setState","useEffect","current","fetch","then","resp","json","setTimeout","useFetch","result","response","hits","map","song_art_image_url","id","primary_artist","Search","initialState","values","setValues","target","value","useForm","search","handleInputChange","s","marginLeft","marginRight","onSubmit","e","preventDefault","children","autoComplete","type","placeholder","onChange","focusBorderColor","css","overflowY","height","spacing","Popular","fetcher","a","method","mode","headers","Authorization","text","VideoPlayer","music","useSWR","useMusicId","PrincipalScreen","Provider","templateRows","templateColumns","gap","colSpan","rowSpan","AppRoute","flex","exact","path","component","theme","extendTheme","colors","purple","AppMusic","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b4f777f.chunk.js","sourcesContent":["\r\n\r\nimport { Flex, Text, Link} from '@chakra-ui/layout'\r\nimport { Link as ReachLink } from 'react-router-dom'\r\n\r\nimport React from 'react'\r\nimport { Icon } from '@chakra-ui/icons' \r\nimport {\r\n    Menu,\r\n    MenuButton,\r\n} from \"@chakra-ui/react\"\r\n\r\nexport const NavItem = ({navSize, title, icon, active,route }) => {\r\n    return (\r\n\r\n        <Flex \r\n            mt={30}\r\n            flexDir='column'\r\n            w='100%'\r\n            p='20px'\r\n            alignItems= {navSize === 'small' ? 'center' : 'flex-start'}\r\n            // justifyContent={navSize === 'small' ? 'space-between' : 'flex-start'}\r\n        >\r\n            <Menu placement='right'>\r\n                {/* <LinkR\r\n                    to={route}\r\n                > */}\r\n                <Link\r\n                    as={ReachLink}\r\n                    backgroundColor={active && 'AEC8CA'}\r\n                    p={3}\r\n                    borderRadius = {8}\r\n                    _hover= {{textDecor: 'none', backgroundImage:'linear-gradient(87deg, rgba(249,186,16,1) 0%, rgba(253,96,45,1) 100%)'}}\r\n                    w={navSize === 'large' && '100%'}\r\n                    to={route}\r\n                >\r\n                                    \r\n                   \r\n                    <MenuButton w='100%'>\r\n                        <Flex >\r\n                            <Icon as={icon} fontSize='xl' color={active ? '#535089' : '#535062'}/>\r\n                            <Text ml={3} display={navSize==='small' ? 'none' : 'flex'} color='#535062'>{title}</Text>\r\n                        </Flex>\r\n                    </MenuButton>\r\n                </Link>\r\n                {/* </LinkR> */}\r\n            </Menu>\r\n            \r\n        </Flex>\r\n    )\r\n}\r\n","import { Avatar } from '@chakra-ui/avatar'\r\nimport { IconButton } from '@chakra-ui/button'\r\nimport { HamburgerIcon } from '@chakra-ui/icons'\r\n\r\nimport { Divider, Flex, Heading, Text } from '@chakra-ui/layout'\r\nimport React, { useState } from 'react'\r\nimport { NavItem } from './NavItem'\r\nimport { FiHome, FiList, FiMenu, FiTrendingUp } from 'react-icons/fi';\r\nimport { color } from '@chakra-ui/styled-system'\r\n\r\n\r\n\r\n\r\n  \r\nexport const Sidebar = () => {\r\n\r\n    const [tamaÃ±oSide, setTamaÃ±oSide] = useState('large');\r\n \r\n    return (\r\n        <Flex \r\n        \tpos='sticky'\r\n            left='5'\r\n            h='95vh'\r\n            padding='10px'\r\n            marginTop='2.5vh'\r\n            boxShadow='0 4px 12px 0 rgba(0, 0, 0, 0.05)'\r\n            borderRadius={tamaÃ±oSide === 'small' ? '15px' : '30px'}\r\n            w={ tamaÃ±oSide === 'small' ? '75px' : '200px'}\r\n            flexDir='column'\r\n            justifyContent='space-between'\r\n            className={tamaÃ±oSide === 'small' ? 'animate__animated animate__fadeInRight' : 'animate__animated animate__fadeInLeft'}\r\n            backgroundColor='#1d1c23'\r\n\r\n        >\r\n            <Flex\r\n                p=\"5%\"\r\n                flexDir='column'\r\n                alignItems='flex-start'\r\n                as='nav'\r\n            >\r\n                <IconButton \r\n                    background='none'\r\n                    mt={5}\r\n                    _hover={{background: 'none'}}\r\n                    icon={<FiMenu color='#535062' />}\r\n                    onClick={() =>{\r\n                        if(tamaÃ±oSide === 'small')\r\n                            setTamaÃ±oSide('large')\r\n                        else\r\n                            setTamaÃ±oSide('small')\r\n                    }}\r\n                />\r\n\r\n            </Flex>\r\n\r\n            <Flex\r\n            pos='sticky'\r\n            left='5'\r\n            h='95vh'\r\n            marginTop='4.5vh'\r\n            marginBottom='4.5vh'\r\n            boxShadow='0 4px 12px 0 rgba(0, 0, 0, 0.05)'\r\n            borderRadius={tamaÃ±oSide === 'small' ? '10px' : '30px'}\r\n            w={ tamaÃ±oSide === 'small' ? '50px' : '180px'}\r\n            flexDir='column'\r\n            // justifyContent='space-between' no quitar\r\n            className={tamaÃ±oSide === 'small' ? 'animate__animated animate__fadeInRight' : 'animate__animated animate__fadeInLeft'}\r\n            backgroundColor='#302f36'\r\n            >\r\n                <NavItem navSize={tamaÃ±oSide} icon={FiHome} title='Dashboard' route='/home'/>\r\n                <NavItem navSize={tamaÃ±oSide} icon={FiList} title='Listar' route='/list'/>\r\n                <NavItem navSize={tamaÃ±oSide} icon={FiTrendingUp} title='Poulares' route='/likes'/>\r\n            </Flex>\r\n\r\n\r\n            <Flex\r\n                p='5%'\r\n                flexDir='column'\r\n                w='100%'\r\n                alignItems={tamaÃ±oSide === 'small' ? 'center' : 'flex-start'}\r\n                mb={4}\r\n            >\r\n\r\n                <Divider borderColor='#535062' display={tamaÃ±oSide === 'small' ? 'none' : 'flex'}/>\r\n                <Flex mt={4} align='center'>\r\n                    <Avatar  size='sm'  />\r\n                    <Flex flexDir='column' ml={4} display={tamaÃ±oSide === 'small' ? 'none' : 'flex'}\r\n                        className={tamaÃ±oSide === 'small' ? 'animate__animated animate__bounce' : 'animate__animated animate__fadeInLeft'}\r\n                    >\r\n                        <Heading as='h3' color='#535062' size='sm'>Edison Lopez</Heading>\r\n                        <Text color='#535062'>Admin</Text>\r\n                    </Flex>\r\n                </Flex>\r\n\r\n            </Flex>\r\n\r\n\r\n        </Flex>\r\n      \r\n    )\r\n}\r\n","\r\n\r\nimport { createContext } from \"react\";\r\n\r\nexport const MusicContext = createContext(null);","import { Button } from \"@chakra-ui/button\";\r\nimport { Image } from \"@chakra-ui/image\";\r\nimport { Badge, Box, Center, Flex, Text } from \"@chakra-ui/layout\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { MusicContext } from \"../../context/MusicContext\";\r\n\r\n\r\nexport const ContenedorSearch = ({ image, title, artist, idSong }) => {\r\n\r\n\r\n  const { setMusic} = useContext(MusicContext);\r\n  \r\n  const handleStablishMusic = () => {\r\n    setMusic({\r\n      title: title,\r\n      idSong: idSong\r\n    });\r\n    console.log(`${idSong}--${title}`);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        as='button'\r\n        maxW=\"100%\"\r\n        borderWidth=\"3px\"\r\n        borderRadius=\"lg\"\r\n        overflow=\"hidden\"\r\n        d=\"flex\"\r\n        bg='#0d0d0d'\r\n        borderColor=\"#230c33\"\r\n        _hover={{\r\n          background: 'linear-gradient(87deg, rgba(43,0,83,1) 0%, rgba(0,0,0,1) 100%)',\r\n          filter: \"blur(.3px)\"\r\n        }}\r\n        onClick={() => handleStablishMusic()}\r\n\r\n        >\r\n        <Box p=\"3\">\r\n          <Image src={image} h=\"40px\" borderRadius=\"full\" />\r\n        </Box>\r\n\r\n        <Center>\r\n        \r\n          <Box\r\n            mt={2}\r\n            d=\"flex\"\r\n            alignItems=\"baseline\"\r\n            flexDirection=\"column\"\r\n          >\r\n            <Box maxW=\"10px\">\r\n              <Badge\r\n                maxW=\"170px\"\r\n                borderRadius=\"full\"\r\n                px=\"1\"\r\n                color=\"#d6bcfa\"\r\n                colorScheme=\"purple\"\r\n                variant=\"subtle\"\r\n                isTruncated\r\n              >\r\n               {artist}\r\n           \r\n              </Badge>\r\n            </Box>\r\n            <Box\r\n              color=\"white\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"wide\"\r\n              fontSize=\"2vh\"\r\n              maxW=\"170px\"\r\n              textTransform=\"uppercase\"\r\n              ml=\"2\"\r\n              isTruncated\r\n            >\r\n              {title}\r\n            </Box>\r\n          </Box>\r\n        </Center>\r\n      </Box>\r\n    \r\n    </>\r\n      );\r\n  };\r\n\r\n  \r\n","import { Text } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\nimport { ContenedorSearch } from \"./search/ContenedorSearch\";\r\n\r\nexport const LikesPage = () => {\r\n  return (\r\n    <>\r\n      <Text color=\"white\" fontSize=\"5xl\">\r\n        Likes\r\n      </Text>\r\n          \r\n    </>\r\n  );\r\n};\r\n","import { Text } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\n\r\nexport const ListasScreen = () => {\r\n  return (\r\n    <>\r\n      <Text color=\"white\" fontSize=\"5xl\">\r\n        List\r\n      </Text>\r\n      \r\n    </>\r\n  );\r\n};\r\n","import { useFetch } from \"./useFetch\";\r\n\r\nexport const useSearch = (name) => {\r\n  const { data, loading, error } = useFetch(`https://api.genius.com/search?q=${name}&access_token=UzKv83CtItpERivmSKWpS2GPBD13fkdAzKxNDF7Eb_7RJhAo4PEchsepjyg5Ir0S`);\r\n\r\n  if (loading === true) {\r\n    return {result: null, loading: true, error: false};\r\n  }\r\n\r\n  const { response } = data;\r\n\r\n  const res =  response.hits.map((h) => {\r\n    return {\r\n      image: h.result.song_art_image_url,\r\n      title: h.result.title,\r\n      idSong: h.result.id,\r\n      artist: h.result.primary_artist.name,\r\n    }\r\n  });\r\n\r\n  return {\r\n    result: res, loading: false, error: false\r\n  }\r\n};\r\n","import { useEffect, useRef, useState } from \"react\"\r\n\r\n\r\nexport const useFetch = ( url) => {\r\n   \r\n    if(url===false){\r\n        throw new Error(\"Debe ingresar el URL\");\r\n    }\r\n\r\n    const isMounted = useRef(true);\r\n    const [state, setState] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n        url: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    });\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        if(isMounted.current){\r\n            setState({\r\n                data: null,\r\n                loading: true,\r\n                error: null\r\n            })\r\n        }\r\n  \r\n\r\n        fetch(url)\r\n            .then( resp => resp.json()).then(data => {\r\n                setTimeout(()=>{\r\n            \r\n                    setState({\r\n                        loading: false,\r\n                        data: data,\r\n                        error: null,\r\n                    })\r\n                },4000)\r\n            })\r\n    },[url]);\r\n\r\n    return state;\r\n\r\n\r\n\r\n}","import { Button } from \"@chakra-ui/button\";\r\nimport { SearchIcon } from \"@chakra-ui/icons\";\r\nimport { Input, InputGroup, InputLeftElement } from \"@chakra-ui/input\";\r\nimport { Box, Stack } from \"@chakra-ui/layout\";\r\nimport React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useSearch } from \"../../hooks/useSearch\";\r\nimport { ContenedorSearch } from \"../search/ContenedorSearch\";\r\nimport \"./stylesSearch.css\";\r\n\r\nexport const Search = () => {\r\n  const initialForm = {\r\n    search: \"\",\r\n  };\r\n  const [{ search }, handleInputChange, reset] = useForm(initialForm);\r\n\r\n  const s = useSearch(search);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box mt={3} marginLeft=\"30px\" marginRight=\"30px\">\r\n        <form onSubmit={handleSearch}>\r\n          <InputGroup>\r\n            <InputLeftElement children={<SearchIcon color=\"#535080\" />} />\r\n            <Input\r\n              autoComplete=\"false\"\r\n              type=\"text\"\r\n              color=\"white\"\r\n              placeholder=\"Buscar\"\r\n              name=\"search\"\r\n              value={search}\r\n              onChange={handleInputChange}\r\n              borderColor=\"#535062\"\r\n              focusBorderColor=\"#535089\"\r\n              borderWidth=\"2px\"\r\n\r\n              css={`\r\n                &:hover {\r\n                  border-color: #535080;\r\n                }\r\n              `}\r\n            />\r\n            <Button type=\"submit\"></Button>\r\n          </InputGroup>\r\n        </form>\r\n      </Box>\r\n\r\n      <Box\r\n        overflowY=\"auto\"\r\n        height=\"90%\"\r\n        marginLeft=\"30px\"\r\n        marginRight=\"30px\"\r\n        mt={2}\r\n        css={{\r\n          \"&::-webkit-scrollbar\": {\r\n            display: \"none\",\r\n          },\r\n        }}\r\n      >\r\n        <Stack spacing={4} >\r\n          {s.result !== null &&\r\n            s.result.map((h) => <ContenedorSearch key={h.idSong} {...h} />)}\r\n        </Stack>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","\r\nimport { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from \"react\";\r\nimport { Heading, Center } from \"@chakra-ui/react\";\r\n\r\nexport const Popular = () => {\r\n  return (\r\n    <>\r\n      \r\n        <Heading color='white' as=\"h2\" size=\"lg\">\r\n          Popular\r\n        </Heading>\r\n\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetch } from \"./useFetch\";\r\nimport useSWR from \"swr\";\r\nimport axios from \"axios\";\r\n\r\nconst fetcher = async (url) =>\r\n  fetch(url,{    \r\n    method: \"GET\",\r\n    mode: \"no-cors\",\r\n    headers: {\r\n      Authorization: \"Bearer CrXBoOQhY2Hyvqf8Xp_VyNkRgX9G1gQCkVPiAZXWEIjUnZuZM2xkIh4duLdREM6D\",     \r\n    },\r\n  }).then (async (response) => {\r\n    console.log(await response.text())\r\n    return response.json();\r\n  });\r\n\r\nexport const useMusicId = (id) => {\r\n  const { data, loading, error } = useSWR(\r\n    `https://api.genius.com/songs/321`,\r\n    fetcher\r\n  );\r\n\r\n  console.log({ data, loading, error });\r\n\r\n  if (loading === true) {\r\n    return { result: null, loading: true, error: false };\r\n  }\r\n\r\n  console.log(data);\r\n\r\n  return {\r\n    result: data,\r\n    loading: false,\r\n    error: false,\r\n  };\r\n};\r\n","\r\n\r\nimport ReactPlayer from 'react-player'\r\n\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { Center } from '@chakra-ui/layout'\r\nimport { MusicContext } from '../../context/MusicContext'\r\nimport { useMusicId } from '../../hooks/useMusicId'\r\n\r\n\r\n\r\nexport const VideoPlayer = () => {\r\n\r\n\r\n    const {music} = useContext(MusicContext);\r\n\r\n    useEffect(() =>{\r\n\r\n    }, [music])\r\n    \r\n    const url = useMusicId(music.id);\r\n    \r\n    return (\r\n        <Center>\r\n            <ReactPlayer\r\n              height='200px'url={url} />\r\n        </Center>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { ChakraProvider, Grid, GridItem, Box } from \"@chakra-ui/react\";\r\nimport { Search } from \"./homePage/Search\";\r\nimport { Popular } from \"./homePage/Popular\";\r\nimport { VideoPlayer } from \"./homePage/VideoPlayer\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { MusicContext } from \"../context/MusicContext\";\r\n\r\n\r\n\r\nexport const PrincipalScreen = () => {\r\n\r\n  const [music, setMusic] = useState({});\r\n\r\n  return (\r\n    <>\r\n    <MusicContext.Provider value={{\r\n      music,\r\n      setMusic\r\n    }}>\r\n      <Grid\r\n        templateRows=\"repeat(2, 1fr)\"\r\n        templateColumns=\"repeat(3, 1fr)\"\r\n        gap={5}\r\n        // mt='50px'\r\n        h='95vh'\r\n        mt='2.5vh'\r\n      >\r\n        <GridItem colSpan={2} bg=\"papayawhip\" p={0} >\r\n          <VideoPlayer />\r\n        </GridItem>\r\n        \r\n        <GridItem colSpan={1} rowSpan={2} bg=\"#1d1c23\" borderRadius='30px'>\r\n          <Search />\r\n        </GridItem>\r\n\r\n        <GridItem rowSpan={1} colSpan={1} bg=\"tomato\">\r\n          <Popular />\r\n        </GridItem>\r\n\r\n        <GridItem rowSpan={1} colSpan={1} bg=\"tomato\">\r\n\r\n        </GridItem>\r\n      </Grid>\r\n      </MusicContext.Provider >\r\n    </>\r\n  );\r\n};\r\n","\r\nimport { Flex, Box,Button } from \"@chakra-ui/react\"\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Sidebar } from \"../components/Sidebar\";\r\nimport { lyrics } from \"../hooks/useLyrics\";\r\nimport { LikesPage } from \"../pages/LikesPage\";\r\nimport { ListasScreen } from \"../pages/ListasScreen\";\r\nimport { PrincipalScreen } from \"../pages/PrincipalScreen\";\r\n\r\n\r\nexport const AppRoute = () => {\r\n  return (\r\n    <Router>\r\n      <Flex>\r\n        <Box ml={4}>\r\n          <Sidebar />\r\n        </Box>          \r\n        <Box\r\n          flex='1'\r\n          ml={12}\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/home\" component={PrincipalScreen} />\r\n            <Route exact path=\"/list\" component={ListasScreen} />\r\n            <Route exact path=\"/likes\" component={LikesPage} />\r\n            <Redirect to=\"/home\" />\r\n          </Switch>\r\n          \r\n        </Box>\r\n      </Flex>\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport { Sidebar } from './components/Sidebar';\r\nimport { extendTheme } from \"@chakra-ui/react\"\r\nimport { AppRoute } from './routes/AppRoute';\r\n\r\n\r\nconst theme = extendTheme({\r\n    colors: {\r\n      purple: {\r\n        100: '#535089'\r\n      },\r\n    },\r\n  })\r\n\r\nexport const AppMusic = () => {\r\n    return (\r\n\r\n            <ChakraProvider theme={theme}>\r\n                <AppRoute />\r\n            </ChakraProvider>\r\n          \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { AppMusic } from './AppMusic';\n\nReactDOM.render(\n  \n    <AppMusic />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}